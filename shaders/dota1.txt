Shader hash c8bfa5c6-8e42dc6c-5114e085-a9c31e9a

ps_4_0
      dcl_constantbuffer cb0[2], immediateIndexed
      dcl_constantbuffer cb1[30], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v0.xyz
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyz
      dcl_input_ps_siv linear noperspective v8.xy, position
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v7.xyzx, -cb1[19].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: dp3 r0.w, cb1[20].xyzx, r0.xyzx
   5: div r0.xyz, r0.xyzx, r0.wwww
   6: mul r1.xy, v8.xyxx, cb1[25].xyxx
   7: sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0)
   8: mad r0.xyz, r0.xyzx, r1.xxxx, cb1[19].xyzx
   9: add r1.xyz, r0.xyzx, -v0.xyzx
  10: dp3 r0.w, r1.xyzx, v2.xyzx
  11: dp3 r1.x, r1.xyzx, v1.xyzx
  12: add r1.y, -r0.w, l(1.0000)
  13: lt r1.zw, r1.xxxy, l(0, 0, 0, 0)
  14: or r0.w, r1.w, r1.z
  15: discard_nz r0.w
  16: add r1.zw, -r1.xxxy, l(0.0000, 0.0000, 1.0000, 1.0000)
  17: lt r1.zw, r1.zzzw, l(0, 0, 0, 0)
  18: or r0.w, r1.w, r1.z
  19: discard_nz r0.w
  20: mad r1.zw, r1.xxxy, v5.zzzw, v5.xxxy
  21: mad r1.xy, r1.xyxx, v4.zwzz, v4.xyxx
  22: sample_indexable r2.xyzw, r1.xyxx, t1.xyzw, s1
  23: sample_indexable r1.xyzw, r1.zwzz, t1.xyzw, s1
  24: add r1.xyzw, -r2.xyzw, r1.xyzw
  25: mad r1.xyzw, v2.wwww, r1.xyzw, r2.xyzw
  26: add r0.w, r1.w, -cb0[0].w
  27: div r0.w, abs(r0.w), cb0[1].x
  28: add r2.x, -r0.w, l(1.0000)
  29: lt r2.x, r2.x, l(0)
  30: discard_nz r2.x
  31: deriv_rty r2.xyz, r0.zxyz
  32: deriv_rtx r0.xyz, r0.yzxy
  33: mul r3.xyz, r0.xyzx, r2.xyzx
  34: mad r0.xyz, r2.zxyz, r0.yzxy, -r3.xyzx
  35: dp3 r0.x, r0.xyzx, r0.xyzx
  36: rsq r0.x, r0.x
  37: mad r0.x, r0.z, r0.x, -cb0[0].z
  38: add r0.y, -cb0[0].z, cb0[0].y
  39: div_sat r0.x, r0.x, r0.y
  40: add r0.y, cb0[1].y, l(-1.0000)
  41: mad r0.y, r0.w, r0.y, l(1.0000)
  42: mul r0.y, r0.y, r1.w
  43: mad r1.xyz, r1.xyzx, v6.xyzx, -cb1[29].wwww
  44: mul r0.y, r0.y, v6.w
  45: mul r0.x, r0.x, r0.y
  46: mad o0.xyz, r0.xxxx, r1.xyzx, cb1[29].wwww
  47: mov o0.w, r0.x
  48: ret
